<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.goldlone.mapper.BookMapper">
    <!-- 图书类别 -->
    <resultMap id="bookType" type="cn.goldlone.po.BookType">
        <result property="no" column="BT_no" />
        <result property="name" column="BT_name" />
    </resultMap>
    <!-- 图书信息 -->
    <resultMap id="bookInfo" type="cn.goldlone.model.BookInfo">
        <result property="no" column="B_no" />
        <result property="name" column="B_name" />
        <result property="type" column="BT_name" />
        <result property="author" column="B_author" />
        <result property="publicer" column="B_publicer" />
        <result property="publicDate" column="B_publiceDate" />
        <result property="price" column="B_price" />
        <result property="inventory" column="B_inventory" />
    </resultMap>
    <!-- 借阅图书信息 -->
    <resultMap id="borrowInfo" type="cn.goldlone.model.BorrowInfo">
        <result property="no" column="BB_no" />
        <result property="bookNo" column="BB_bookNo" />
        <result property="memberNo" column="BB_memberNo" />
        <result property="memberName" column="M_name" />
        <result property="borrowTime" column="BB_borrowTime" />
    </resultMap>
    
    <!-- 添加图书类别 -->
    <insert id="addBookType" parameterType="String"
            useGeneratedKeys="true" keyProperty="no">
        INSERT
        INTO BookType(BT_name)
        VALUES(#{name});
    </insert>
    <!-- 获取图书类别 -->
    <select id="getBookType" resultMap="bookType">
        SELECT BT_no,BT_name
        FROM BookType;
    </select>
    <!-- 获取类别名 -->
    <select id="selectTypeName" parameterType="int" resultType="String">
        SELECT BT_name
        FROM BookType
        WHERE BT_no=#{typeNo};
    </select>
    <!-- 查询图书类别编号 -->
    <select id="selectTypeNoByName" parameterType="String" resultType="int">
        SELECT BT_no
        FROM BookType
        WHERE BT_name=#{typeName};
    </select>
    <!-- 添加图书信息 -->
    <insert id="addBook" parameterType="cn.goldlone.po.Book">
        INSERT
        INTO BookInfo(B_no, B_name, B_typeNo, B_author, B_publicer,
                             B_publiceDate, B_price, B_inventory)
        VALUES(#{no}, #{name}, #{typeNo}, #{author}, #{publicer},
               #{publicDate}, #{price}, #{inventory});
    </insert>
    <!-- 根据ISBN编号查询数目信息 -->
    <select id="selectBookByISBN" parameterType="String" resultMap="bookInfo">
        SELECT b1.B_no,b1.B_name,b2.BT_name,b1.B_author,b1.B_publicer,
            b1.B_publiceDate,b1.B_price,b1.B_inventory
        FROM BookInfo b1,BookType b2
        WHERE b1.B_no=#{isbn} AND b1.B_typeNo=b2.BT_no;
    </select>
    <!-- 根据类别编号查询数目信息 -->
    <select id="selectBookByType" parameterType="int" resultMap="bookInfo">
        SELECT b1.B_no,b1.B_name,b2.BT_name,b1.B_author,b1.B_publicer,
            b1.B_publiceDate,b1.B_price,b1.B_inventory
        FROM BookInfo b1,BookType b2
        WHERE b1.B_typeNo=#{typeNo} AND
              b1.B_typeNo=b2.BT_no;
    </select>
    <!-- 根据部分书名查询数目信息 -->
    <select id="selectBookByName" parameterType="String" resultMap="bookInfo">
        SELECT b1.B_no,b1.B_name,b2.BT_name,b1.B_author,b1.B_publicer,
        b1.B_publiceDate,b1.B_price,b1.B_inventory
        FROM BookInfo b1,BookType b2
        WHERE b1.B_name LIKE concat('%',#{name},'%') AND
              b1.B_typeNo=b2.BT_no;
    </select>
    <!-- 查询库存 -->
    <select id="selectInventory" parameterType="String" resultType="int">
        SELECT B_inventory
        FROM BookInfo
        WHERE B_no=#{isbn};
    </select>
    <!-- 借书 -->
    <insert id="borrowBook" parameterType="cn.goldlone.po.BorrowBook">
        INSERT
        INTO BorrowBook(BB_bookNo,BB_memberNo,BB_borrowTime)
        VALUES(#{bookNo}, #{memberNo}, #{borrowTime});
    </insert>
    <update id="updateInventoryByBorrow" parameterType="string">
        UPDATE BookInfo
        SET B_inventory=B_inventory-1
        WHERE B_no=#{isbn};
    </update>
    <!-- 查询未归还图书列表 -->
    <select id="selectNotBackBook" parameterType="String" resultMap="borrowInfo">
        SELECT b.BB_no,b.BB_bookNo,b.BB_memberNo,m.M_name,b.BB_borrowTime
        FROM BorrowBook b,Member m
        WHERE BB_bookNo = #{isbn} AND
              BB_backTime IS NULL AND
              b.BB_memberNo=m.M_memberNo;
    </select>
    <!-- 还书 -->
    <update id="backBook" parameterType="cn.goldlone.po.BorrowBook">
        UPDATE BorrowBook
        SET BB_backTime=#{backTime}
        WHERE BB_no=#{no};
    </update>
    <!-- 还书更新库存 -->
    <update id="updateInventoryByBack" parameterType="String">
        UPDATE BookInfo
        SET B_inventory=B_inventory+1
        WHERE B_no=#{isbn};
    </update>
    
</mapper>